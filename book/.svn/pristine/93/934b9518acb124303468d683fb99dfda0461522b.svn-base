package com.gl.action;

import java.util.List;

import com.gl.model.Manager;
import com.gl.model.Teacher;
import com.gl.service.ManagerService;
import com.gl.utils.PageBean;
import com.gl.utils.TimeHelper;
import com.gl.utils.UUIDUtils;
import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;

public class ManagerSuperManagerAction extends ActionSupport implements ModelDriven<Manager> {
	private Manager manager=new Manager();
	@Override
	public Manager getModel() {
		System.out.println("超级管理员获取到了管理员的模型");
		return manager;
	}
	private ManagerService managerService;
	public void setManagerService(ManagerService managerService) {
		this.managerService=managerService;
	}
	private Integer page;
	public void setPage(Integer page) {
		this.page=page;
	}
	private String select;
	public void setSelect(String select){
		this.select=select;
	}
	private String excelPath;//Excel文件路径
	public void setExcelPath(String excelPath) {
		this.excelPath=excelPath;
	}
	public String info() {
		manager=managerService.findManangerById(manager.getMid());
		return "infoPage";
	}
	public String addPage() {
		List<Manager> mlist = managerService.findAllManagers();
		ActionContext.getContext().getValueStack().set("mlist", mlist);
		return "addPage";
	}
	public String importPage() {
		return "importPage";
	}
	public String delete() {
		managerService.delete(manager);
		return "deleteSuccess";
	}
	public String update() {
		System.out.println("正在更新用户信息。。。"+manager.getMid()+",phone:"+manager.getPhone_number()+",power:"+manager.getPower());
		managerService.update(manager);
		return "updateSuccess";
	}
	public String editPage() {
		System.out.println("正在跳转编辑页面...");
		manager=managerService.findManangerById(manager.getMid());
		return "editPage";
	}
	public String listPage() {
		return "listPage";
	}
	public String edit() {
		manager=managerService.findManangerById(manager.getMid());
		managerService.update(manager);
		return "editSuccess";
	}
	public String save() {
		manager.setCode(UUIDUtils.getUUID());
		manager.setCreate_time(TimeHelper.getCurrentTime());
		managerService.save(manager);
		return "saveSuccess";
	}
	public String findManagerAll() {
		PageBean<Manager> pageBean=managerService.findManagerByPage(page);
		ActionContext.getContext().getValueStack().set("pageBean", pageBean);
		return "findManagerAll";
	}
	public String select(){
		this.clearActionErrors();//每次运行时，将actionError清空
		if(select==null||select==""){
			this.addActionError("关键字为空：请重新输入！");
			return "findManagerAll";
		}
		System.out.println("搜索到了，关键字："+select+"当前页面为："+page);
		PageBean<Manager> pageBean = managerService.selectManagerByKey(select, page);
		if(pageBean==null){
			this.addActionError("查无结果，请检查关键字是否正确！");
			return "findManagerAll";
		}
		ActionContext.getContext().getValueStack().set("pageBean", pageBean);
		System.out.println("搜索成功,共有   "+pageBean.getList().size()+"   个结果");
		return "selectSuccess";
	}
	public String importExcel() {
		System.out.println("Excel文件上传成功，且文件路径为："+excelPath);
		return "importSuccess";
	}
	public String exportModel() {
		
		return "exportSuccess";
	}
}
